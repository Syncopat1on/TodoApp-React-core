{"ast":null,"code":"import React from'react';import{useState}from'react';import NewTaskForm from'./components/NewTaskForm';import TaskList from'./components/TaskList';import Footer from'./components/Footer';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function App(){const[tasks,setTasks]=useState([{id:1,text:'Сходить покушать',completed:true,createdAt:new Date(Date.now()-1000)},{id:2,text:'Выкурить цыбарку',completed:false,createdAt:new Date(Date.now()-200000)}]);const[filter,setFilter]=useState('all');const addTask=text=>{const newTask={id:Date.now(),text,completed:false,createdAt:new Date()};setTasks([...tasks,newTask]);};const toggleTask=id=>{setTasks(tasks.map(task=>task.id===id?{...task,completed:!task.completed}:task));};const deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};const editTask=(id,newText)=>{setTasks(tasks.map(task=>task.id===id?{...task,text:newText}:task));};const clearCompleted=()=>{setTasks(tasks.filter(task=>!task.completed));};const filteredTasks=tasks===null||tasks===void 0?void 0:tasks.filter(task=>{if(filter==='active')return!task.completed;if(filter==='completed')return task.completed;return true;});const activeTasksCount=tasks.filter(task=>!task.completed).length;return/*#__PURE__*/_jsxs(\"section\",{className:\"todoapp\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"todos\"}),/*#__PURE__*/_jsx(NewTaskForm,{onAddTask:addTask})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"main\",children:[/*#__PURE__*/_jsx(TaskList,{tasks:filteredTasks,onToggle:toggleTask,onDelete:deleteTask,onEdit:editTask}),/*#__PURE__*/_jsx(Footer,{activeTasksCount:activeTasksCount,currentFilter:filter,onFilterChange:setFilter,onClearCompleted:clearCompleted})]})]});};export default App;","map":{"version":3,"names":["React","useState","NewTaskForm","TaskList","Footer","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","id","text","completed","createdAt","Date","now","filter","setFilter","addTask","newTask","toggleTask","map","task","deleteTask","editTask","newText","clearCompleted","filteredTasks","activeTasksCount","length","className","children","onAddTask","onToggle","onDelete","onEdit","currentFilter","onFilterChange","onClearCompleted"],"sources":["C:/Users/under/OneDrive/Документы/GitHub/TodoApp-React-core/src/app.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport NewTaskForm from './components/NewTaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport Footer from './components/Footer';\r\nimport './style.css';\r\n\r\nexport function App() {\r\n  const [tasks, setTasks] = useState([\r\n    {id: 1, text:'Сходить покушать', completed: true,  createdAt: new Date(Date.now() - 1000)},\r\n    {id: 2, text: 'Выкурить цыбарку', completed: false,  createdAt: new Date(Date.now() - 200000)},\r\n  ]);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const addTask = (text) => {\r\n    const newTask = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false,\r\n      createdAt: new Date(),\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const toggleTask = (id) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === id ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const editTask = (id, newText) => {\r\n    setTasks(tasks.map(task => \r\n      task.id === id ? { ...task, text: newText } : task\r\n    ));\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setTasks(tasks.filter(task => !task.completed));\r\n  };\r\n\r\n  const filteredTasks = tasks?.filter(task => {\r\n    if (filter === 'active') return !task.completed;\r\n    if (filter === 'completed') return task.completed;\r\n    return true;\r\n  });\r\n\r\n  const activeTasksCount = tasks.filter(task => !task.completed).length;\r\n\r\n  return (\r\n    <section className=\"todoapp\">\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <NewTaskForm onAddTask={addTask} />\r\n      </header>\r\n      <section className=\"main\">\r\n        <TaskList \r\n          tasks={filteredTasks} \r\n          onToggle={toggleTask} \r\n          onDelete={deleteTask}\r\n          onEdit={editTask} \r\n        />\r\n        <Footer \r\n          activeTasksCount={activeTasksCount}\r\n          currentFilter={filter}\r\n          onFilterChange={setFilter}\r\n          onClearCompleted={clearCompleted}\r\n        />\r\n      </section>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}